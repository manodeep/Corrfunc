## Shamelessly taken from scikit-image - 15th May, 2023 (MS)
name: Benchmark PR

on:
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

jobs:

  benchmark_linux:
    name: Linux-benchmarks
    runs-on: ${{ matrix.os }}

    strategy:
        matrix:
            os: [ubuntu-latest]
            compiler: [gcc-11]
            python-version: ["3.11"]
            numpy-version: ["1.22"]

    env:
      CC: ${{ matrix.compiler }}
      CORRFUNC_CI: true
  
    steps:
      # We need the full repo to avoid this issue
      # https://github.com/actions/checkout/issues/23
      - name: Checkout full repo
        uses: actions/checkout@v3

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: false
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true
          python-version: ${{ matrix.python-version }}

      - name: Setup some dependencies
        shell: bash -l {0}
        run: |
            conda create -q --yes -n test python=${{ matrix.python-version }} numpy=${{ matrix.numpy-version }}
            conda activate test
            conda install -q --yes -c conda-forge gsl asv

      - name: Display PATH, compiler, python
        shell: bash -l {0}
        run: |
          conda activate test
          echo "PATH = " $PATH
          echo "COMPILER = " `which ${{ matrix.compiler }}`
          echo "COMPILER VERSION = " `${{ matrix.compiler }} --version`
          echo "PYTHON = " `which python`
          echo "(PYTHON, NUMPY) version = " `python -c "import sys; import numpy as np; print(sys.version); print(np.__version__);"`
          echo "Preprocessor defs:"
          echo `${{ matrix.compiler }} -dM -E - -march=native`

      - name: compile
        shell: bash -l {0}
        run: make -r CC=${{ matrix.compiler }}

      - name: compile and install python extensions
        shell: bash -l {0}
        run: |
          echo "CC = " $CC
          export CC=${{ matrix.compiler }}
          python -m pip install -e .
            
      - name: Run benchmarks
        shell: bash -l {0}
        run: |
          set -x

          # ID this runner
          asv machine --yes

          echo "Baseline:  ${{ github.event.pull_request.base.sha }} (${{ github.event.pull_request.base.label }})"
          echo "Contender: ${GITHUB_SHA} (${{ github.event.pull_request.head.label }})"

          # Run benchmarks for current commit against base
          # See https://github.com/airspeed-velocity/asv/issues/595 for discussion on interleaved processes
          asv continuous --split --show-stderr --verbose --interleave-processes ${{ github.event.pull_request.base.sha }} ${GITHUB_SHA} | sed "/Traceback \|failed$\|PERFORMANCE DECREASED/ s/^/::error::/" | tee benchmarks.log
          if grep "Traceback \|failed\|PERFORMANCE DECREASED" benchmarks.log > /dev/null ; then
              exit 1
          fi

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: asv-benchmark-results
          path: .asv/results
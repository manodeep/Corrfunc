name: GitHub CI

on: [push, pull_request]

jobs:
  build:
    name: Testing on ${{ matrix.os }} with tools (${{ matrix.python-version }}, ${{ matrix.numpy-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
#        compilers: [gcc-7, gcc-8, gcc-9, clang-6, clang-8, clang-9]
#        compiler-version: ["4.8", "6", "7", "8", "9", "3.8", "3.9", "4.0", "7", "8", "9"]       
        compilers: [gcc-8, gcc-9, clang]
        python-version: ["3.5", "3.6", "3.7", "3.8"]
        numpy-version: ["1.14", "1.16"]
        exclude:
          - python-version: "3.5"
            numpy-version: "1.16"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

#      - name: Cache conda
#        uses: actions/cache@v1
#        with:
#          path: ~/conda_pkgs_dir
#          key: conda-${{ matrix.os }}-python-${{ matrix.python-version }} }}

      - name: Setup Miniconda
        uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: false
          auto-activate-base: false
          miniconda-version: 'latest'
          python-version: ${{ matrix.python-version }}
#          use-only-tar-bz2: true

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda create -q --yes -n test python=${{ matrix.python-version }} numpy=${{ matrix.numpy-version }}
          conda activate test
          conda install -q --yes -c conda-forge gsl

      - name: Conda info
        shell: bash -l {0}
        run: conda info
        
      - name: Display Python version (bash)
        shell: bash
        run: python -c "import sys; print(sys.version)"

      - name: Display Python version (bash -l)
        shell: bash -l {0}
        run: python -c "import sys; print(sys.version)"

      - name: Display PATH, compiler (bash -l)
        shell: bash -l {0}
        run: |
          echo $PATH
          echo which ${{ matrix.compiler }}
          echo which gsl-config
          conda activate test
          echo $PATH
          echo which ${{ matrix.compiler }}
          echo which gsl-config

      - name: Show compiler version
        shell: bash -l {0}
        run: ${{ matrix.compiler }} --version

      - name: compile 
        shell: bash -l {0}       
        run: make -r CC=${{ matrix.compiler }}

      - name: install
        shell: bash -l {0}        
        run: make install CC=${{ matrix.compiler }} 

      - name: compile and install python extensions
        shell: bash -l {0}       
        run: python -m pip install -e . CC=${{ matrix.compiler }} 

      - name: tests
        shell: bash -l {0}        
        run: make tests CC=${{ matrix.compiler }} 

#    env:
#      CC: ${{ matrix.compiler }}

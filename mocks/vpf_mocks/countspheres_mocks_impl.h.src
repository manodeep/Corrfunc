// # -*- mode: c -*-
/* File: countspheres_mocks_impl.h.src */
/*
  This file is a part of the Corrfunc package
  Copyright (C) 2015-- Manodeep Sinha (manodeep@gmail.com)
  License: MIT LICENSE. See LICENSE file under the top-level
  directory at https://github.com/manodeep/Corrfunc/
*/

#pragma once

#ifdef __cplusplus
extern "C" {
#endif

#include "defs.h" //for definition of struct config_options
#include "countspheres_mocks.h"//for definition of struct results_countspheres_mocks 
    
    extern void interrupt_handler_vpf_mocks_DOUBLE(int signo);
    
    typedef int (*vpf_mocks_func_ptr_DOUBLE)(const int64_t np, DOUBLE * restrict X, DOUBLE * restrict Y, DOUBLE * restrict Z,
                                             const DOUBLE xc, const DOUBLE yc, const DOUBLE zc,
                                             const DOUBLE rmax, const int nbin, 
                                             uint64_t *counts_src_pN);

    extern vpf_mocks_func_ptr_DOUBLE vpf_mocks_driver_DOUBLE(const struct config_options *options) __attribute__((warn_unused_result));


    extern int countspheres_mocks_DOUBLE(const int64_t Ngal, DOUBLE *RA, DOUBLE *DEC, DOUBLE *CZ,
                                         const int64_t Nran, DOUBLE * restrict RAND_RA, DOUBLE * restrict RAND_DEC, DOUBLE * restrict RAND_CZ,
                                         const int threshold_neighbors,
                                         const DOUBLE rmax, const int nbin, const int nc,
                                         const int num_pN,
                                         const char *centers_file,
                                         const int cosmology,
                                         results_countspheres_mocks *results,
                                         struct config_options *options, struct extra_options *extra);
    
#ifdef __cplusplus
}
#endif

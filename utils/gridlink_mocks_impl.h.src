// # -*- mode: c -*-
/* File: gridlink_mocks_impl.h.src */
/*
  This file is a part of the Corrfunc package
  Copyright (C) 2015-- Manodeep Sinha (manodeep@gmail.com)
  License: MIT LICENSE. See LICENSE file under the top-level
  directory at https://github.com/manodeep/Corrfunc/
*/

#pragma once


#ifdef __cplusplus
extern "C" {
#endif

#include "defs.h"
#include <inttypes.h>
#include "cellarray_mocks_DOUBLE.h"

    /* Common functions, if at all */
    extern int get_binsize_data_DOUBLE(const DOUBLE xmin,const DOUBLE xmax,
                                       const DOUBLE rmax,
                                       const int refine_factor, const int max_ncells, DOUBLE *xbinsize, int *nlattice,
                                       const struct config_options *options) __attribute__((warn_unused_result));
    extern void get_max_min_data_DOUBLE(const int64_t ND1, const DOUBLE * restrict X1, const DOUBLE * restrict Y1, const DOUBLE * restrict Z1,
                                        DOUBLE *min_x, DOUBLE *min_y, DOUBLE *min_z, DOUBLE *max_x, DOUBLE *max_y, DOUBLE *max_z);
    
    extern void get_max_min_ra_dec_DOUBLE(const int64_t ND1, const DOUBLE *ra, const DOUBLE *dec,
                                          DOUBLE *ra_min, DOUBLE *dec_min, DOUBLE *ra_max, DOUBLE *dec_max);

    extern DOUBLE get_max_ra_diff_two_cells_DOUBLE(const DOUBLE first_dec_vals[2], const DOUBLE second_dec_vals[2], const DOUBLE thetamax)  __attribute__((warn_unused_result));
    extern int check_if_two_cells_are_within_ra_range_DOUBLE(DOUBLE first_ra_vals[2], DOUBLE second_ra_vals[2], const DOUBLE max_ra_diff) __attribute__((warn_unused_result));
    
    /* Functions related to DDrppi_mocks */
    extern cellarray_mocks_index_particles_DOUBLE * gridlink_mocks_index_particles_DOUBLE(const int64_t np,
                                                                                          const DOUBLE *x, const DOUBLE *y, const DOUBLE *z, const DOUBLE *cz, const weight_struct *weights,
                                                                                          const DOUBLE xmin, const DOUBLE xmax,
                                                                                          const DOUBLE ymin, const DOUBLE ymax,
                                                                                          const DOUBLE zmin, const DOUBLE zmax,
                                                                                          const DOUBLE max_x_size,
                                                                                          const DOUBLE max_y_size,
                                                                                          const DOUBLE max_z_size,
                                                                                          const int xbin_refine_factor,
                                                                                          const int ybin_refine_factor,
                                                                                          const int zbin_refine_factor,
                                                                                          int *nlattice_x,
                                                                                          int *nlattice_y,
                                                                                          int *nlattice_z,
                                                                                          const struct config_options *options)__attribute__((warn_unused_result));

    extern int assign_ngb_cells_mocks_index_particles_DOUBLE(struct cellarray_mocks_index_particles_DOUBLE *lattice1,
                                                             struct cellarray_mocks_index_particles_DOUBLE *lattice2, const int64_t totncells,
                                                             const int xbin_refine_factor, const int ybin_refine_factor, const int zbin_refine_factor,
                                                             const int nmesh_x, const int nmesh_y, const int nmesh_z,
                                                             const int autocorr);
    extern void free_cellarray_mocks_index_particles_DOUBLE(cellarray_mocks_index_particles_DOUBLE *lattice, const int64_t totncells);
    /* End of functions related to DDrppi_mocks */

    
    /* Function declarations for DDtheta_mocks */
    extern cellarray_mocks_index_wtheta_DOUBLE * gridlink_mocks_theta_dec_DOUBLE(const int64_t np,
                                                                          const DOUBLE *ra, const DOUBLE *dec,
                                                                          const DOUBLE *X, const DOUBLE *Y, const DOUBLE *Z, const weight_struct *weights,
                                                                          const DOUBLE dec_min,const DOUBLE dec_max,
                                                                          const DOUBLE max_dec_size,
                                                                          const int dec_refine_factor,
                                                                          const DOUBLE thetamax,
                                                                          int64_t *totncells,
                                                                          const struct config_options *options)__attribute__((warn_unused_result));
    extern int assign_ngb_cells_index_wtheta_dec_DOUBLE(cellarray_mocks_index_wtheta_DOUBLE *lattice1, cellarray_mocks_index_wtheta_DOUBLE *lattice2,
                                                        const int64_t totncells,
                                                        const int dec_refine_factor,
                                                        const int autocorr);
        
    extern cellarray_mocks_index_wtheta_DOUBLE * gridlink_mocks_theta_ra_dec_DOUBLE(const int64_t np,
                                                                                    const DOUBLE *ra, const DOUBLE *dec,
                                                                                    const DOUBLE *X, const DOUBLE *Y, const DOUBLE *Z, const weight_struct *weights,
                                                                                    const DOUBLE ra_min,const DOUBLE ra_max,
                                                                                    const DOUBLE dec_min, const DOUBLE dec_max,
                                                                                    const int max_ra_size,
                                                                                    const int max_dec_size,
                                                                                    const int ra_refine_factor,
                                                                                    const int dec_refine_factor,
                                                                                    const DOUBLE thetamax,
                                                                                    int64_t *totncells,
                                                                                    int *ngrid_declination,
                                                                                    int *max_nmesh_ra,
                                                                                    int **ngrid_ra,
                                                                                    const struct config_options *options)__attribute__((warn_unused_result));

    extern int assign_ngb_cells_index_ra_dec_wtheta_DOUBLE(cellarray_mocks_index_wtheta_DOUBLE *lattice1, cellarray_mocks_index_wtheta_DOUBLE *lattice2,
                                                           const int64_t totncells, 
                                                           const int ra_refine_factor, const int dec_refine_factor,
                                                           const int nmesh_dec, const int max_nmesh_ra,
                                                           const DOUBLE ra_min, const DOUBLE ra_diff,
                                                           const int *nmesh_grid_ra,
                                                           const int autocorr);
    
    extern void free_cellarray_mocks_index_wtheta_DOUBLE(cellarray_mocks_index_wtheta_DOUBLE *lattice, const int64_t totncells);
    
    
#ifdef __cplusplus
}
#endif
